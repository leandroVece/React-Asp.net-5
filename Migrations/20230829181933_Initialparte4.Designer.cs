// <auto-generated />
using System;
using Cadeteria;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cadeteria.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230829181933_Initialparte4")]
    partial class Initialparte4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cadeteria.Models.Archivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ForeiKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ForeiKey");

                    b.ToTable("archivo", (string)null);
                });

            modelBuilder.Entity("Cadeteria.Models.Articulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("articulo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("302eec33-3ec7-4664-9da4-32e98b3ee027"),
                            Name = "Celular Motorola",
                            Price = 1500m,
                            stock = 3
                        },
                        new
                        {
                            Id = new Guid("646bec53-9328-40cf-9936-7ad0fd5c5983"),
                            Name = "Celular Sangsung",
                            Price = 2500m,
                            stock = 3
                        },
                        new
                        {
                            Id = new Guid("ae679e76-b7e3-45bc-8b97-d6dd8ef16200"),
                            Name = "Celular Shiaomi",
                            Price = 1200m,
                            stock = 3
                        },
                        new
                        {
                            Id = new Guid("bb55f434-2698-4d1f-98f8-2fccaa36bc21"),
                            Name = "Iphon",
                            Price = 1000m,
                            stock = 3
                        },
                        new
                        {
                            Id = new Guid("0ac4774e-1616-464d-b827-99862f55ae7e"),
                            Name = "Micro razen 3200",
                            Price = 500m,
                            stock = 3
                        },
                        new
                        {
                            Id = new Guid("51d30e27-6782-473b-bf06-f0dff24d145f"),
                            Name = "Micro intel i3 9100",
                            Price = 500m,
                            stock = 3
                        },
                        new
                        {
                            Id = new Guid("44de84e5-5a5a-4b07-a083-606c46a358ca"),
                            Name = "Monitor 25",
                            Price = 200m,
                            stock = 3
                        },
                        new
                        {
                            Id = new Guid("cf9ee397-bba1-4522-adb7-cb9ff5842499"),
                            Name = "Pc intel i3 9100 16GB ddr4",
                            Price = 1000m,
                            stock = 3
                        });
                });

            modelBuilder.Entity("Cadeteria.Models.ArticuloCategoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("articuloForeiKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("categoriaForeiKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("articuloForeiKey");

                    b.HasIndex("categoriaForeiKey");

                    b.ToTable("articuloCategoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("55d553ae-0e7f-4f65-aefd-86fbb6ba0c70"),
                            articuloForeiKey = new Guid("51d30e27-6782-473b-bf06-f0dff24d145f"),
                            categoriaForeiKey = 1
                        },
                        new
                        {
                            Id = new Guid("fcb24de5-3374-4339-a7e3-64a155835da7"),
                            articuloForeiKey = new Guid("0ac4774e-1616-464d-b827-99862f55ae7e"),
                            categoriaForeiKey = 1
                        },
                        new
                        {
                            Id = new Guid("ba8a92c4-8a41-4b60-867e-c586ede13fde"),
                            articuloForeiKey = new Guid("44de84e5-5a5a-4b07-a083-606c46a358ca"),
                            categoriaForeiKey = 1
                        },
                        new
                        {
                            Id = new Guid("2d4532c3-4282-4190-9817-80fc6b543652"),
                            articuloForeiKey = new Guid("cf9ee397-bba1-4522-adb7-cb9ff5842499"),
                            categoriaForeiKey = 1
                        },
                        new
                        {
                            Id = new Guid("94db418a-7c53-433a-b135-46b670ddc372"),
                            articuloForeiKey = new Guid("302eec33-3ec7-4664-9da4-32e98b3ee027"),
                            categoriaForeiKey = 2
                        },
                        new
                        {
                            Id = new Guid("daf9fde7-9e3e-4b61-ad3b-f342fa712e4c"),
                            articuloForeiKey = new Guid("646bec53-9328-40cf-9936-7ad0fd5c5983"),
                            categoriaForeiKey = 2
                        },
                        new
                        {
                            Id = new Guid("f126372b-6855-4e24-bead-0843f5ce67a7"),
                            articuloForeiKey = new Guid("ae679e76-b7e3-45bc-8b97-d6dd8ef16200"),
                            categoriaForeiKey = 2
                        },
                        new
                        {
                            Id = new Guid("4e6eadcf-f982-43db-b8a4-641e426d564f"),
                            articuloForeiKey = new Guid("bb55f434-2698-4d1f-98f8-2fccaa36bc21"),
                            categoriaForeiKey = 2
                        });
                });

            modelBuilder.Entity("Cadeteria.Models.CadetesPedido", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("pedidoForeingKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userForeingKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("pedidoForeingKey")
                        .IsUnique();

                    b.HasIndex("userForeingKey");

                    b.ToTable("cadetePedido", (string)null);
                });

            modelBuilder.Entity("Cadeteria.Models.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("userForeiKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("userForeiKey")
                        .IsUnique();

                    b.ToTable("califiacacion", (string)null);
                });

            modelBuilder.Entity("Cadeteria.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Informatica"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Celular"
                        });
                });

            modelBuilder.Entity("Cadeteria.Models.Historial", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("profileForeingKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userForeingKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("historial", (string)null);
                });

            modelBuilder.Entity("Cadeteria.Models.Pedido", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteForeingKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("ClienteForeingKey");

                    b.ToTable("pedido", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("adc4aba6-b2b6-4ca6-a715-e563987fd02e"),
                            ClienteForeingKey = new Guid("0a9fa564-0604-4dfa-88df-3636fe395678"),
                            Estado = "Pendiente",
                            Obs = "Coca"
                        });
                });

            modelBuilder.Entity("Cadeteria.Models.Profile", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("userForeiKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userForeiKey")
                        .IsUnique();

                    b.ToTable("perfil", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("7b5e9399-8e95-4ae8-8745-9542a01e2cc0"),
                            Direccion = "Entre rios",
                            Nombre = "Jaun Castellanos",
                            Telefono = "231321231",
                            userForeiKey = new Guid("e0bd0d60-7ff8-43a6-b78b-8dc67780c8c9")
                        },
                        new
                        {
                            id = new Guid("0a9fa564-0604-4dfa-88df-3636fe395651"),
                            Direccion = "independencia",
                            Nombre = "Ana Hume",
                            Telefono = "231321231",
                            userForeiKey = new Guid("2d58f017-e038-4efa-acc1-f5f9e2d08668")
                        },
                        new
                        {
                            id = new Guid("0a9fa564-0604-4dfa-88df-3636fe395678"),
                            Direccion = "independencia",
                            Nombre = "Fer Hume",
                            Telefono = "654321",
                            userForeiKey = new Guid("07899a8d-bc7f-46d4-8d23-b174203f8bb0")
                        },
                        new
                        {
                            id = new Guid("e04a530d-f4bb-4ff1-898f-b3c00160dc28"),
                            Direccion = "corrientes",
                            Nombre = "Pancho Estrada",
                            Telefono = "654321",
                            userForeiKey = new Guid("36126fee-fee7-4d62-a22e-959feb2dd013")
                        },
                        new
                        {
                            id = new Guid("910381a0-3a65-4ab9-9929-44faca09b567"),
                            Direccion = "cordoba",
                            Nombre = "Chichu Han",
                            Telefono = "654321",
                            userForeiKey = new Guid("df0efb73-de14-4140-bbd0-c357148d89d1")
                        },
                        new
                        {
                            id = new Guid("b140ee23-f61b-45a7-8ef0-177d5c76a317"),
                            Direccion = "italia",
                            Nombre = "Jessy Jade",
                            Telefono = "654321",
                            userForeiKey = new Guid("e2a4980f-7c50-45b0-aba5-6a46d79cf328")
                        },
                        new
                        {
                            id = new Guid("4978a844-a5d3-4d32-86e9-7046eefddea2"),
                            Direccion = "Entre rios",
                            Nombre = "Jaun Antonio",
                            Telefono = "231321231",
                            userForeiKey = new Guid("19ccc667-10c5-47b7-abd0-bae699c1cd3e")
                        },
                        new
                        {
                            id = new Guid("e41d99f0-2afd-4c25-b677-514bcf897f6b"),
                            Direccion = "independencia",
                            Nombre = "Ana Pradera",
                            Telefono = "231321231",
                            userForeiKey = new Guid("afaa31d8-013f-4dee-b21a-f9d03278d26a")
                        },
                        new
                        {
                            id = new Guid("2544db67-7dd3-4a16-99ec-7f1451c00558"),
                            Direccion = "independencia",
                            Nombre = "Fer Nanda",
                            Telefono = "654321",
                            userForeiKey = new Guid("c9d6ff8f-82ac-4eef-80df-de4999c4bb45")
                        },
                        new
                        {
                            id = new Guid("a8bc0306-f0d1-46bb-b2b4-44104bb0e017"),
                            Direccion = "independencia y alem",
                            Nombre = "Tu unico Proveedor",
                            Telefono = "3812342",
                            userForeiKey = new Guid("c036633e-2b76-498b-9b82-cfbb4f6a95a8")
                        });
                });

            modelBuilder.Entity("Cadeteria.Models.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("rolName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7aafd6fb-612e-42c7-99db-cbec0fdad96f"),
                            rolName = "admin"
                        },
                        new
                        {
                            Id = new Guid("7a86db69-1474-4d92-a18e-91899d876c92"),
                            rolName = "cadete"
                        },
                        new
                        {
                            Id = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            rolName = "cliente"
                        },
                        new
                        {
                            Id = new Guid("c434c64a-5699-431e-8a88-a3ede659ba3d"),
                            rolName = "provedor"
                        });
                });

            modelBuilder.Entity("Cadeteria.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("rolForeikey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("rolForeikey");

                    b.ToTable("usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2a4980f-7c50-45b0-aba5-6a46d79cf328"),
                            password = "$2a$11$2.jxDaixFu2nYdZiO4saqOMhQ85YXj6WP8fxVMfk4EA4u/h.FjC3i",
                            rolForeikey = new Guid("7aafd6fb-612e-42c7-99db-cbec0fdad96f"),
                            userName = "admin"
                        },
                        new
                        {
                            Id = new Guid("c036633e-2b76-498b-9b82-cfbb4f6a95a8"),
                            password = "$2a$11$75HuOfCuc1vy2XMDbQHxMeZXN8mxjzXkQg5a2vAPMSJdJXhVYhKkS",
                            rolForeikey = new Guid("c434c64a-5699-431e-8a88-a3ede659ba3d"),
                            userName = "proveedor"
                        },
                        new
                        {
                            Id = new Guid("df0efb73-de14-4140-bbd0-c357148d89d1"),
                            password = "$2a$11$WbbTh8ek2NGuzoOlHKnSHOrTCmoujKs3lyKz.ajWxeN5SQDQG34rm",
                            rolForeikey = new Guid("7a86db69-1474-4d92-a18e-91899d876c92"),
                            userName = "cadete"
                        },
                        new
                        {
                            Id = new Guid("36126fee-fee7-4d62-a22e-959feb2dd013"),
                            password = "$2a$11$LaRyYTHakjHt3.eK5TaTHOltMXx4jJ67QpOJb/WV0PimBDA5TBc2m",
                            rolForeikey = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            userName = "cliente"
                        },
                        new
                        {
                            Id = new Guid("19ccc667-10c5-47b7-abd0-bae699c1cd3e"),
                            password = "$2a$11$80EpBt84L4.ck0AC2zKQoOTKlOHlreI3UaAJ.atsimM3TAl7fX6Ku",
                            rolForeikey = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            userName = "cliente01"
                        },
                        new
                        {
                            Id = new Guid("afaa31d8-013f-4dee-b21a-f9d03278d26a"),
                            password = "$2a$11$FYZq4o5dZu9MolojmXSUgemH3f83SENMUgLdq.gNPAMayYFkRi9hS",
                            rolForeikey = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            userName = "cliente2"
                        },
                        new
                        {
                            Id = new Guid("c9d6ff8f-82ac-4eef-80df-de4999c4bb45"),
                            password = "$2a$11$61xNVK.jGfHK0fRn7UeinucGnfiVH.JMmPsosyvYMDthVS5RUK7pC",
                            rolForeikey = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            userName = "cliente3"
                        },
                        new
                        {
                            Id = new Guid("07899a8d-bc7f-46d4-8d23-b174203f8bb0"),
                            password = "$2a$11$Nt0rMpNwEhyE2Ovhz2Q4BOSCotvFL4MmU4Zv/7WXchs0uoqyb7dKe",
                            rolForeikey = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            userName = "cliente02"
                        },
                        new
                        {
                            Id = new Guid("2d58f017-e038-4efa-acc1-f5f9e2d08668"),
                            password = "$2a$11$OB38ljzEt.d.fL5aYJVfCOzJ/FwQe0hMJC6bcfCyQz3wUo3DPo6j6",
                            rolForeikey = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            userName = "cliente03"
                        },
                        new
                        {
                            Id = new Guid("e0bd0d60-7ff8-43a6-b78b-8dc67780c8c9"),
                            password = "$2a$11$OF0tfeD9db3xSTIMBNAESehiMGmWIsp6/ST2OZ0YOM1WR0O5GmiAO",
                            rolForeikey = new Guid("f0601b48-a878-4fb5-a767-3f1340b8c0d8"),
                            userName = "cadete2"
                        });
                });

            modelBuilder.Entity("Cadeteria.Models.Archivo", b =>
                {
                    b.HasOne("Cadeteria.Models.Articulo", "articulo")
                        .WithMany("archivos")
                        .HasForeignKey("ForeiKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("articulo");
                });

            modelBuilder.Entity("Cadeteria.Models.ArticuloCategoria", b =>
                {
                    b.HasOne("Cadeteria.Models.Articulo", "Articulo")
                        .WithMany("ArticuloCategoria")
                        .HasForeignKey("articuloForeiKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cadeteria.Models.Categoria", "Categoria")
                        .WithMany("ArticuloCategoria")
                        .HasForeignKey("categoriaForeiKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Cadeteria.Models.CadetesPedido", b =>
                {
                    b.HasOne("Cadeteria.Models.Pedido", "Pedido")
                        .WithOne("Cadp")
                        .HasForeignKey("Cadeteria.Models.CadetesPedido", "pedidoForeingKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cadeteria.Models.User", "Cadete")
                        .WithMany("Cadp")
                        .HasForeignKey("userForeingKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cadete");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Cadeteria.Models.Calificacion", b =>
                {
                    b.HasOne("Cadeteria.Models.User", "User")
                        .WithOne("Calificacion")
                        .HasForeignKey("Cadeteria.Models.Calificacion", "userForeiKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cadeteria.Models.Pedido", b =>
                {
                    b.HasOne("Cadeteria.Models.Profile", "Cliente")
                        .WithMany("listaPedido")
                        .HasForeignKey("ClienteForeingKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Cadeteria.Models.Profile", b =>
                {
                    b.HasOne("Cadeteria.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Cadeteria.Models.Profile", "userForeiKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cadeteria.Models.User", b =>
                {
                    b.HasOne("Cadeteria.Models.Rol", "Rol")
                        .WithMany("User")
                        .HasForeignKey("rolForeikey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Cadeteria.Models.Articulo", b =>
                {
                    b.Navigation("ArticuloCategoria");

                    b.Navigation("archivos");
                });

            modelBuilder.Entity("Cadeteria.Models.Categoria", b =>
                {
                    b.Navigation("ArticuloCategoria");
                });

            modelBuilder.Entity("Cadeteria.Models.Pedido", b =>
                {
                    b.Navigation("Cadp");
                });

            modelBuilder.Entity("Cadeteria.Models.Profile", b =>
                {
                    b.Navigation("listaPedido");
                });

            modelBuilder.Entity("Cadeteria.Models.Rol", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Cadeteria.Models.User", b =>
                {
                    b.Navigation("Cadp");

                    b.Navigation("Calificacion");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
